{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "type": "object",
          "required": [
            "amount",
            "from",
            "msg",
            "sender"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "from": {
              "$ref": "#/definitions/HumanAddr"
            },
            "msg": {
              "$ref": "#/definitions/Binary"
            },
            "sender": {
              "$ref": "#/definitions/HumanAddr"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "initialize_bond_terms"
      ],
      "properties": {
        "initialize_bond_terms": {
          "type": "object",
          "required": [
            "control_variable",
            "fee",
            "initial_debt",
            "max_debt",
            "max_payout",
            "minimum_price",
            "vesting_term"
          ],
          "properties": {
            "control_variable": {
              "$ref": "#/definitions/Uint128"
            },
            "fee": {
              "$ref": "#/definitions/Uint128"
            },
            "initial_debt": {
              "$ref": "#/definitions/Uint128"
            },
            "max_debt": {
              "$ref": "#/definitions/Uint128"
            },
            "max_payout": {
              "$ref": "#/definitions/Uint128"
            },
            "minimum_price": {
              "$ref": "#/definitions/Uint128"
            },
            "vesting_term": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "set_bond_term"
      ],
      "properties": {
        "set_bond_term": {
          "type": "object",
          "required": [
            "input",
            "parameter"
          ],
          "properties": {
            "input": {
              "$ref": "#/definitions/Uint128"
            },
            "parameter": {
              "$ref": "#/definitions/BondParameter"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "set_adjustment"
      ],
      "properties": {
        "set_adjustment": {
          "type": "object",
          "required": [
            "addition",
            "buffer",
            "increment",
            "target"
          ],
          "properties": {
            "addition": {
              "type": "boolean"
            },
            "buffer": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "increment": {
              "$ref": "#/definitions/Uint128"
            },
            "target": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "set_staking"
      ],
      "properties": {
        "set_staking": {
          "type": "object",
          "required": [
            "staking"
          ],
          "properties": {
            "staking": {
              "$ref": "#/definitions/Contract"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "redeem"
      ],
      "properties": {
        "redeem": {
          "type": "object",
          "required": [
            "recipient",
            "stake"
          ],
          "properties": {
            "recipient": {
              "$ref": "#/definitions/HumanAddr"
            },
            "stake": {
              "type": "boolean"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "recover_lost_token"
      ],
      "properties": {
        "recover_lost_token": {
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "token": {
              "$ref": "#/definitions/Contract"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "change_admin"
      ],
      "properties": {
        "change_admin": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/HumanAddr"
            },
            "padding": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "revoke_permit"
      ],
      "properties": {
        "revoke_permit": {
          "type": "object",
          "required": [
            "permit_name"
          ],
          "properties": {
            "padding": {
              "type": [
                "string",
                "null"
              ]
            },
            "permit_name": {
              "type": "string"
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "BondParameter": {
      "type": "string",
      "enum": [
        "vesting",
        "payout",
        "fee",
        "debt"
      ]
    },
    "Contract": {
      "type": "object",
      "required": [
        "address",
        "code_hash"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/HumanAddr"
        },
        "code_hash": {
          "type": "string"
        }
      }
    },
    "HumanAddr": {
      "type": "string"
    },
    "Uint128": {
      "type": "string"
    }
  }
}
